############################################################################################################################################################
For the interactive VS non-interactive, the non-interactive variant goes through all options. We do this because we do not want to change the amount of
information that is told. We solely want to test if the "interactiveness" of allowing the user to skip certain explanations is a good thing.
For example, in the non-interactive variant, users would have to go through, "What is a snippet?", "What is a query?", "What does relevance mean?", etc...
As well as going through all the examples 1, 2, ..., n. The interactive one would allow to skip certain question answer options.

For short, medium and long, defined as [S], [M], [L] it is important to note that the amount of relevant information is the same. The only thing that is different
is the way the information is worded.
############################################################################################################################################################


bot ->
	[S] "This task is about document relevance."
	[M] "In this task you will be accessing document relevance."
	[L] "Hi, thank you for choosing our task! In this task you will be assessing document relevance."
user -> IF "What does that mean?" -> INTRO()

DEF INTRO():
	bot ->
		[S] "For this task, youâ€™ll have to give the relevance of a query and a snippet."
		[M] "Document relevance means that given a snippet of text and a query you should provide their relevance."
		[L] "When speaking of relevance of a snippet with relation to a query, the relevance denotes how well a retrieved snippet meets the information need of the user that provided the query."
	user -> IF "What is a snippet?" -> EXPLAIN_SNIPPET()
		ELIF "What is a query?" -> EXPLAIN_QUERY()
		ELIF "What does relevance mean?" -> EXPLAIN_RELEVANCE()
		ELIF "That makes sense, give me the details." -> EXPLAIN_SCALE()

DEF EXPLAIN_SNIPPET():
	bot ->	[S]	"A snippet is simply a part of a larger piece of text. Just select a couple of subsequent sentences from a larger document would be an example of a snippet."
		[M]	"Alright, you would like some more information about a snippet. A snippet is simply a part of a larger piece of text." +
			"If you were to take a document and select a couple of subsequent sentences, this would be an example of a snippet."
		[L]	"Alright, you would like some more information about a snippet. A snippet is simply a part of a larger piece of text."
			"If you were to take a document and randomly select a couple of subsequent sentences, this would be an example of a snippet."
			"A snippet is usually what you also see on search engines. On the result page, you do not see the full text of every result, you instead only see a snippet."
	user -> IF "What does a snippet look like?" -> bot -> "A snippet of a larger text could for example be" <insert snippet 1>
		ELIF "I understand, lets go back to the problem." -> INTRO()

DEF EXPLAIN_QUERY():
	bot ->	[S]	"A query is something that you would for example enter on a search engine."
		[M]	"A query is something that you would for example enter on a search engine. Your goal is to decide whether a snippet of text is relevant given a query."
		[L]	"A query is something that you would for example enter on a search engine. Your goal is to decide whether a snippet of text is relevant given a query." +
			"Queries can be about anything, but should give provide insight about what exactly a search engine user is looking for."

	bot -> "Examples of queries could be; 'how old is the queen', 'trading stocks easily' or 'jet fuel components'"
	user -> "I understand, lets go back to the problem." -> INTRO()

DEF EXPLAIN_RELEVANCE():
	bot ->	[S]	"A snippet is relevant to a query if they are about the same topic." +
			"For example consider a snippet about the creation of jet fuel, thereby the query 'jet fuel components' is relevant." +
			"A snippet about stock market trading, would however not be relevant."
		[M]	" A snippet is relevant to a query if they are about the same topic. In this case this will be about whether a query is relevant to a snippet of text." +
			"For example consider a snippet about the creation of jet fuel, thereby the query 'jet fuel components' is relevant."
			"A snippet about stock market trading, would however not be relevant."
		[L]	"A snippet is relevant to a query if they are about the same topic. In this case this will be about whether a query is relevant to a snippet of text." +
			"For example consider a snippet about the creation of jet fuel, thereby the query 'jet fuel components' is relevant." +
			"This is obviously relevant, because if there was an article of which the snippet provides details about it, it is likely that the article would mention the desired information."
			"A snippet about stock market trading, would however not be relevant. This is obvious since the query mentions jet fuel components, which are unlike to be found in a snippet" +
			"about stock market trading."
	user -> "I understand, lets go back to the problem." -> INTRO()

DEF EXPLAIN_SCALE():
	bot ->	[S]	"Relevance is given on a 4 point scale, 1 is not relevant and 4 is highly relevant."
		[M]	"Relevance is given on a 4 point scale, 1 is not relevant, 2 is vaguely related, 3 is somewhat relevant and 4 is highly relevant."
		[L]	"Relevance is given on a 4 point scale, 1 is not relevant and 4 is highly relevant. For example, something that is not related would get a 1, something vaguely related would" +
			"get a 2, something related but not a perfect match would receive a 3, and finally the perfect relevance match would get a 4."
	user -> IF "Alright, give me an example." -> EXAMPLE(0)

DEF EXAMPLE(n):
	bot -> "Alright you would like to see an(other) example, consider the following."
	bot -> <give example [n]>
	user -> IF "I understand now, let's get started." -> START()
		ELSE "I would like to hear more about this." -> EXAMPLE(n + 1)

DEF START():
	// start the task
